{"version":3,"sources":["../../src/components/TileStatus.ts","../../src/components/Dashboard.tsx","../../src/components/Metric.tsx","../../src/components/Tile.tsx","App.tsx","index.tsx"],"names":["Dashboard","children","className","styles","Metric","props","fontAwesomeIcon","icon","value","Tile","color","dashes","sparkline","series","console","data","datasets","label","fill","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","borderDash","yAxisID","options","responsive","maintainAspectRatio","showLines","legend","display","animation","duration","elements","line","tension","point","radius","plugins","filler","propagate","scales","xAxes","type","gridLines","time","min","max","unit","yAxes","id","ticks","suggestedMin","suggestedMax","metricsElement","metricStyles","key","metric","React","sparklineElement","height","width","title","TileStatus","App","metrics","uom","faArrowUp","faArrowDown","x","y","independentAxes","xmin","Date","valueOf","xmax","length","status","Stale","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3edb5780.chunk.js","sourcesContent":["export enum TileStatus {\n  Stale = 'stale'\n}\n","import React from 'react'\nimport { Tile } from './Tile'\nimport styles from './Dashboard.css'\n\nexport const Dashboard = ({\n  children\n}: {\n  children: React.ReactElement<typeof Tile>[]\n}) => {\n  return (\n    <div className={styles.dashboard}>{children.map((child) => child)}</div>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { MetricProps } from './MetricProps'\nimport styles from './Metric.css'\n\nexport const Metric = (props: { metric: MetricProps }) => {\n  const fontAwesomeIcon = <FontAwesomeIcon icon={props.metric.icon} />\n  const value = props.metric.formatter\n    ? props.metric.formatter(props.metric.value)\n    : props.metric.value.toString()\n\n  return (\n    <div className={styles.metric}>\n      {fontAwesomeIcon}&nbsp;{value}\n      {props.metric.uom}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Scatter } from 'react-chartjs-2'\nimport styles from './Tile.css'\nimport metricStyles from './Metric.css'\nimport { Metric } from './Metric'\nimport { TileProps } from './TileProps'\n\nexport const Tile = (props: TileProps) => {\n  const color = 'rgba(255, 255, 255, 0.3)'\n\n  const dashes = [\n    [1, 0],\n    [10, 5]\n  ]\n\n  const sparkline = props.sparkline ? props.sparkline : { series: [] }\n\n  if (sparkline.series.length > dashes.length) {\n    console.warn(\n      `Too many sparkline series - only the first ${dashes.length} are being included.`\n    )\n    sparkline.series = sparkline.series.slice(0, dashes.length)\n  }\n\n  const data = {\n    datasets: sparkline.series.slice(0, dashes.length).map((series, i) => ({\n      label: `props.title ${i}`,\n      fill: 'origin',\n      borderColor: color,\n      backgroundColor: color,\n      pointBackgroundColor: color,\n      pointBorderColor: color,\n      pointHoverBackgroundColor: color,\n      pointHoverBorderColor: color,\n      borderDash: dashes[i],\n      yAxisID: sparkline.independentAxes ? i : 0,\n      data: series.data\n    }))\n  }\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    showLines: true,\n    legend: {\n      display: false\n    },\n    animation: {\n      duration: 0\n    },\n    elements: {\n      line: {\n        tension: 0, // disables bezier curves\n        fill: true\n      },\n      point: {\n        radius: 0\n      }\n    },\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          type: 'time',\n          display: false,\n          gridLines: {\n            display: false\n          },\n          time: {\n            min: props.sparkline ? props.sparkline.xmin : undefined,\n            max: props.sparkline ? props.sparkline.xmax : undefined,\n            unit: 'second'\n          }\n        }\n      ],\n      yAxes: sparkline.series.map((series, i) => ({\n        id: i,\n        type: 'linear',\n        display: false,\n        ticks: {\n          suggestedMin: series.min,\n          suggestedMax: series.max\n        },\n        gridLines: {\n          display: false\n        }\n      }))\n    }\n  }\n\n  const metricsElement = props.metrics ? (\n    <div className={metricStyles.metrics}>\n      {props.metrics.data.map((metric) => (\n        <Metric key={metric.id} metric={metric} />\n      ))}\n    </div>\n  ) : (\n    <div />\n  )\n\n  const sparklineElement =\n    data.datasets.length > 0 ? (\n      <div className={styles.sparkline}>\n        <Scatter data={data} options={options} height={100} width={338} />\n      </div>\n    ) : (\n      <div />\n    )\n\n  return (\n    <div\n      className={`${styles.tile} ${props.status ? styles[props.status] : ''}`}\n    >\n      <div className={styles.title}>{props.title}</div>\n      {metricsElement}\n      {sparklineElement}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Dashboard, Tile, TileStatus } from '@dan-escott/react-dashboard'\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons'\nimport '@dan-escott/react-dashboard/dist/index.css'\n\nconst getDataSeriesA = () => [\n  {x: '2021-01-01T00:00', y: 0},\n  {x: '2021-01-02T00:00', y: 60},\n  {x: '2021-01-03T00:00', y: 20},\n  {x: '2021-01-04T00:00', y: 50},\n  {x: '2021-01-05T00:00', y: 100}\n]\n\nconst getDataSeriesB = () => [\n  {x: '2021-01-01T00:00', y: 10},\n  {x: '2021-01-02T00:00', y: 30},\n  {x: '2021-01-03T00:00', y: 50},\n  {x: '2021-01-04T00:00', y: 20},\n  {x: '2021-01-05T00:00', y: 40}\n]\n\nconst App = () => {\n  return (\n    <div className=\"example-container\">\n      <Dashboard>\n\n        <Tile title=\"Charts on same scale\"\n          metrics={{ data: [\n            { id: 'kpi1', value: 1, uom: '%', icon: faArrowUp},\n            { id: 'kpi2', value: 1, uom: '%', icon: faArrowDown}\n          ]}}\n          sparkline={{\n            series: [\n              { data: getDataSeriesA(), min: 0, max: 1 },\n              { data: getDataSeriesB(), min: 0, max: 1 }]\n            }}\n          />\n\n        <Tile title=\"Charts on independent scales\"\n          metrics={{ data: [\n            { id: 'kpi1', value: 1, uom: '%', icon: faArrowUp},\n            { id: 'kpi2', value: 1, uom: '%', icon: faArrowDown}\n          ]}}\n          sparkline={{\n            independentAxes: true,\n            series: [\n              { data: getDataSeriesA(), min: 0, max: 1 },\n              { data: getDataSeriesB(), min: 0, max: 1 }]\n            }}\n          />\n\n        <Tile title=\"Charts with fixed timespan\"\n          metrics={{ data: [\n            { id: 'kpi1', value: 1, uom: '%', icon: faArrowUp},\n            { id: 'kpi2', value: 1, uom: '%', icon: faArrowDown}\n          ]}}\n          sparkline={{\n            series: [\n              { data: getDataSeriesA(), min: 0, max: 1 },\n              { data: getDataSeriesB(), min: 0, max: 1 }],\n            xmin: new Date(new Date(getDataSeriesA()[0].x).valueOf() - 1000 * 60 * 60 *24),\n            xmax: new Date(new Date(getDataSeriesA()[getDataSeriesA().length - 1].x).valueOf() + 1000 * 60 * 60 *24)\n            }}\n          />\n\n        <Tile title=\"Tile\" metrics={{ data:[{ id: 'kpi1', value: 1, uom: '%', icon: faArrowUp}]}}></Tile>\n        <Tile title=\"Tile\" metrics={{ data:[{ id: 'kpi1', value: 1, uom: '%', icon: faArrowUp}]}}></Tile>\n        <Tile title=\"Tile with stale data\" metrics={{ data: [{ id: 'kpi1', value: 1, uom: '%', icon: faArrowUp}]}} status={TileStatus.Stale}></Tile>\n        <Tile title=\"Tile\" metrics={{ data:[{ id: 'kpi1', value: 1, uom: '%', icon: faArrowUp}]}}></Tile>\n\n      </Dashboard>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}